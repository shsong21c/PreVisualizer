#if !defined(AFX_BTNENH_H__338F6B6D_A171_4FEE_8624_FA8A46F12F23__INCLUDED_)
#define AFX_BTNENH_H__338F6B6D_A171_4FEE_8624_FA8A46F12F23__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class COleFont1;

/////////////////////////////////////////////////////////////////////////////
// CBtnEnh1 wrapper class

class CBtnEnh1 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CBtnEnh1)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x40b5ce81, 0xc5a8, 0x11d2, { 0x81, 0x83, 0x0, 0x0, 0x24, 0x40, 0xdf, 0xd8 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CString GetCaption();
	void SetCaption(LPCTSTR);
	short GetShape();
	void SetShape(short);
	short GetRoundness();
	void SetRoundness(short);
	short GetSlant();
	void SetSlant(short);
	short GetSurface();
	void SetSurface(short);
	unsigned long GetPictureTranspColor();
	void SetPictureTranspColor(unsigned long);
	CString GetSoundDown();
	void SetSoundDown(LPCTSTR);
	CString GetSoundUp();
	void SetSoundUp(LPCTSTR);
	CString GetCursor();
	void SetCursor(LPCTSTR);
	CString GetSoundMouseOver();
	void SetSoundMouseOver(LPCTSTR);
	CString GetSoundMouseOut();
	void SetSoundMouseOut(LPCTSTR);
	COleFont1 GetFontTextLT();
	void SetFontTextLT(LPDISPATCH);
	COleFont1 GetFontTextCT();
	void SetFontTextCT(LPDISPATCH);
	COleFont1 GetFontTextRT();
	void SetFontTextRT(LPDISPATCH);
	COleFont1 GetFontTextLM();
	void SetFontTextLM(LPDISPATCH);
	COleFont1 GetFontTextRM();
	void SetFontTextRM(LPDISPATCH);
	COleFont1 GetFontTextLB();
	void SetFontTextLB(LPDISPATCH);
	COleFont1 GetFontTextCB();
	void SetFontTextCB(LPDISPATCH);
	COleFont1 GetFontTextRB();
	void SetFontTextRB(LPDISPATCH);
	CString GetPicture();
	void SetPicture(LPCTSTR);
	CString GetPicturePressed();
	void SetPicturePressed(LPCTSTR);
	CString GetPictureMouseOver();
	void SetPictureMouseOver(LPCTSTR);
	CString GetPictureCustom();
	void SetPictureCustom(LPCTSTR);
	short GetPicturePosition();
	void SetPicturePosition(short);
	short GetPictureXOffset();
	void SetPictureXOffset(short);
	short GetPictureYOffset();
	void SetPictureYOffset(short);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	short GetPictureTranspMode();
	void SetPictureTranspMode(short);
	BOOL GetButtonCustomRaised();
	void SetButtonCustomRaised(BOOL);
	unsigned long GetBackColorContainer();
	void SetBackColorContainer(unsigned long);
	BOOL GetMovePictureOnPress();
	void SetMovePictureOnPress(BOOL);
	short GetButtonRaiseFactor();
	void SetButtonRaiseFactor(short);
	unsigned long GetHighlightColor();
	void SetHighlightColor(unsigned long);
	unsigned long GetShadowColor();
	void SetShadowColor(unsigned long);
	BOOL GetButtonCustomFitPicture();
	void SetButtonCustomFitPicture(BOOL);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	COleFont1 GetFontTextCaption();
	void SetFontTextCaption(LPDISPATCH);
	CString GetHyperlink();
	void SetHyperlink(LPCTSTR);
	BOOL GetEnableInternetLoadAtDT();
	void SetEnableInternetLoadAtDT(BOOL);
	short GetSmoothEdges();
	void SetSmoothEdges(short);
	CString GetTagEx();
	void SetTagEx(LPCTSTR);
	BOOL GetPictureKeepRatio();
	void SetPictureKeepRatio(BOOL);
	short GetFocusMode();
	void SetFocusMode(short);
	short GetSpecialEffect();
	void SetSpecialEffect(short);
	short GetCaptionWordWrapPerc();
	void SetCaptionWordWrapPerc(short);
	short GetOptimization();
	void SetOptimization(short);
	BOOL GetClickable();
	void SetClickable(BOOL);
	unsigned long GetBackColor();
	void SetBackColor(unsigned long);
	unsigned long GetForeColor();
	void SetForeColor(unsigned long);

// Operations
public:
	void SetAuxText(short position, LPCTSTR text, unsigned long color, unsigned long colorMouseOver, short xOffset, short yOffset, short iEffect, short nFactor);
	LPUNKNOWN GetControlPtr();
	void EnableSound(short nSound, BOOL bEnable);
	void DoClick();
	void Refresh();
	void SetNSContainerColor(unsigned long color);
	CString GetAuxText(short position, unsigned long* pcolor, unsigned long* pcolorMouseOver, short* pxOffset, short* pyOffset, short* piEffect, short* pnFactor);
	long SetPictureFromHandle(short index, long hBmp);
	long SetPictureFromMemory(short index, const VARIANT& pData, long sizeData);
	long SetAviFromMemory(short index, const VARIANT& pData, long sizeData);
	long SetCursorFromHandle(long hCursor);
	long SetSoundFromMemory(short index, const VARIANT& pData, long sizeData);
	void SetAutomaticRefresh(BOOL bAutoRefresh);
	void SetSoundSync(short sound, BOOL flag);
	void EnableAcceleratorForVB();
	void SetTextVisible(short nText, BOOL bVisible);
	void SetCaptionText(LPCTSTR text, unsigned long color, unsigned long colorMouseOver, short xOffset, short yOffset, short iEffect, short nFactor, short nAngle);
	CString GetCaptionText(unsigned long* pcolor, unsigned long* pcolorMouseOver, short* pxOffset, short* pyOffset, short* piEffect, short* pnFactor, short* pnAngle);
	long SetPictureFromNet(short index, LPCTSTR strAddress, LPCTSTR strUsername, LPCTSTR strPassword);
	long SetSoundFromNet(short index, LPCTSTR strAddress, LPCTSTR strUsername, LPCTSTR strPassword);
	BOOL SetAviFromNet(short index, LPCTSTR strAddress, LPCTSTR strUsername, LPCTSTR strPassword);
	void SetSurfaceColor(short nElement, unsigned long color, short nGradientFactor, short nRender3D);
	void MouseCapture(BOOL bCapture);
	void GetSurfaceColor(short nElement, unsigned long* pcolor, short* pnGradientFactor, short* pnRender3D);
	void InternalRefresh();
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_BTNENH_H__338F6B6D_A171_4FEE_8624_FA8A46F12F23__INCLUDED_)
