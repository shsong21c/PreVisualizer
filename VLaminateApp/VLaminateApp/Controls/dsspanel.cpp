// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "dsspanel.h"

// Dispatch interfaces referenced by this interface
#include "font.h"
#include "picture.h"

/////////////////////////////////////////////////////////////////////////////
// CDSSPanel

IMPLEMENT_DYNCREATE(CDSSPanel, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CDSSPanel properties

short CDSSPanel::GetPictureAnimationDelay()
{
	short result;
	GetProperty(0x1f, VT_I2, (void*)&result);
	return result;
}

void CDSSPanel::SetPictureAnimationDelay(short propVal)
{
	SetProperty(0x1f, VT_I2, propVal);
}

BOOL CDSSPanel::GetPictureAnimationEnabled()
{
	BOOL result;
	GetProperty(0x36, VT_BOOL, (void*)&result);
	return result;
}

void CDSSPanel::SetPictureAnimationEnabled(BOOL propVal)
{
	SetProperty(0x36, VT_BOOL, propVal);
}

OLE_COLOR CDSSPanel::GetBackColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_BACKCOLOR, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetBackColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_BACKCOLOR, VT_I4, propVal);
}

long CDSSPanel::GetBackStyle()
{
	long result;
	GetProperty(0xfffffe0a, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetBackStyle(long propVal)
{
	SetProperty(0xfffffe0a, VT_I4, propVal);
}

long CDSSPanel::GetCaptionStyle()
{
	long result;
	GetProperty(0xc, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetCaptionStyle(long propVal)
{
	SetProperty(0xc, VT_I4, propVal);
}

BOOL CDSSPanel::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CDSSPanel::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

COleFont CDSSPanel::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(DISPID_FONT, VT_DISPATCH, (void*)&pDispatch);
	return COleFont(pDispatch);
}

void CDSSPanel::SetFont(LPDISPATCH propVal)
{
	SetProperty(DISPID_FONT, VT_DISPATCH, propVal);
}

long CDSSPanel::GetFont3D()
{
	long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetFont3D(long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

OLE_COLOR CDSSPanel::GetForeColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_FORECOLOR, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetForeColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_FORECOLOR, VT_I4, propVal);
}

OLE_HANDLE CDSSPanel::GetHWnd()
{
	OLE_HANDLE result;
	GetProperty(DISPID_HWND, VT_I4, (void*)&result);
	return result;
}

short CDSSPanel::GetMarqueeDelay()
{
	short result;
	GetProperty(0x20, VT_I2, (void*)&result);
	return result;
}

void CDSSPanel::SetMarqueeDelay(short propVal)
{
	SetProperty(0x20, VT_I2, propVal);
}

long CDSSPanel::GetMarqueeDirection()
{
	long result;
	GetProperty(0x21, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetMarqueeDirection(long propVal)
{
	SetProperty(0x21, VT_I4, propVal);
}

short CDSSPanel::GetMarqueeScrollAmount()
{
	short result;
	GetProperty(0x2e, VT_I2, (void*)&result);
	return result;
}

void CDSSPanel::SetMarqueeScrollAmount(short propVal)
{
	SetProperty(0x2e, VT_I2, propVal);
}

long CDSSPanel::GetMarqueeStyle()
{
	long result;
	GetProperty(0x3c, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetMarqueeStyle(long propVal)
{
	SetProperty(0x3c, VT_I4, propVal);
}

CPicture CDSSPanel::GetMouseIcon()
{
	LPDISPATCH pDispatch;
	GetProperty(0xfffffdf6, VT_DISPATCH, (void*)&pDispatch);
	return CPicture(pDispatch);
}

void CDSSPanel::SetMouseIcon(LPDISPATCH propVal)
{
	SetProperty(0xfffffdf6, VT_DISPATCH, propVal);
}

long CDSSPanel::GetMousePointer()
{
	long result;
	GetProperty(0xfffffdf7, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetMousePointer(long propVal)
{
	SetProperty(0xfffffdf7, VT_I4, propVal);
}

long CDSSPanel::GetOLEDropMode()
{
	long result;
	GetProperty(0x60f, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetOLEDropMode(long propVal)
{
	SetProperty(0x60f, VT_I4, propVal);
}

CPicture CDSSPanel::GetPicture()
{
	LPDISPATCH pDispatch;
	GetProperty(0xfffffdf5, VT_DISPATCH, (void*)&pDispatch);
	return CPicture(pDispatch);
}

void CDSSPanel::SetPicture(LPDISPATCH propVal)
{
	SetProperty(0xfffffdf5, VT_DISPATCH, propVal);
}

short CDSSPanel::GetPictureFrames()
{
	short result;
	GetProperty(0x23, VT_I2, (void*)&result);
	return result;
}

void CDSSPanel::SetPictureFrames(short propVal)
{
	SetProperty(0x23, VT_I2, propVal);
}

unsigned long CDSSPanel::GetPictureMaskColor()
{
	unsigned long result;
	GetProperty(0x24, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetPictureMaskColor(unsigned long propVal)
{
	SetProperty(0x24, VT_I4, propVal);
}

BOOL CDSSPanel::GetPictureUseMask()
{
	BOOL result;
	GetProperty(0x25, VT_BOOL, (void*)&result);
	return result;
}

void CDSSPanel::SetPictureUseMask(BOOL propVal)
{
	SetProperty(0x25, VT_BOOL, propVal);
}

VARIANT CDSSPanel::GetTagVariant()
{
	VARIANT result;
	GetProperty(0x27, VT_VARIANT, (void*)&result);
	return result;
}

void CDSSPanel::SetTagVariant(const VARIANT& propVal)
{
	SetProperty(0x27, VT_VARIANT, &propVal);
}

long CDSSPanel::GetPictureBackgroundStyle()
{
	long result;
	GetProperty(0x3d, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetPictureBackgroundStyle(long propVal)
{
	SetProperty(0x3d, VT_I4, propVal);
}

CPicture CDSSPanel::GetPictureBackground()
{
	LPDISPATCH pDispatch;
	GetProperty(0x38, VT_DISPATCH, (void*)&pDispatch);
	return CPicture(pDispatch);
}

void CDSSPanel::SetPictureBackground(LPDISPATCH propVal)
{
	SetProperty(0x38, VT_DISPATCH, propVal);
}

BOOL CDSSPanel::GetClipControls()
{
	BOOL result;
	GetProperty(0x3f, VT_BOOL, (void*)&result);
	return result;
}

void CDSSPanel::SetClipControls(BOOL propVal)
{
	SetProperty(0x3f, VT_BOOL, propVal);
}

CString CDSSPanel::GetCaption()
{
	CString result;
	GetProperty(DISPID_CAPTION, VT_BSTR, (void*)&result);
	return result;
}

void CDSSPanel::SetCaption(LPCTSTR propVal)
{
	SetProperty(DISPID_CAPTION, VT_BSTR, propVal);
}

short CDSSPanel::GetBevelWidth()
{
	short result;
	GetProperty(0xd, VT_I2, (void*)&result);
	return result;
}

void CDSSPanel::SetBevelWidth(short propVal)
{
	SetProperty(0xd, VT_I2, propVal);
}

short CDSSPanel::GetBorderWidth()
{
	short result;
	GetProperty(0xfffffe07, VT_I2, (void*)&result);
	return result;
}

void CDSSPanel::SetBorderWidth(short propVal)
{
	SetProperty(0xfffffe07, VT_I2, propVal);
}

long CDSSPanel::GetBevelOuter()
{
	long result;
	GetProperty(0xe, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetBevelOuter(long propVal)
{
	SetProperty(0xe, VT_I4, propVal);
}

long CDSSPanel::GetBevelInner()
{
	long result;
	GetProperty(0xf, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetBevelInner(long propVal)
{
	SetProperty(0xf, VT_I4, propVal);
}

BOOL CDSSPanel::GetRoundedCorners()
{
	BOOL result;
	GetProperty(0x10, VT_BOOL, (void*)&result);
	return result;
}

void CDSSPanel::SetRoundedCorners(BOOL propVal)
{
	SetProperty(0x10, VT_BOOL, propVal);
}

BOOL CDSSPanel::GetOutline()
{
	BOOL result;
	GetProperty(0x11, VT_BOOL, (void*)&result);
	return result;
}

void CDSSPanel::SetOutline(BOOL propVal)
{
	SetProperty(0x11, VT_BOOL, propVal);
}

long CDSSPanel::GetFloodType()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetFloodType(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

unsigned long CDSSPanel::GetFloodColor()
{
	unsigned long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetFloodColor(unsigned long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}

short CDSSPanel::GetFloodPercent()
{
	short result;
	GetProperty(0x14, VT_I2, (void*)&result);
	return result;
}

void CDSSPanel::SetFloodPercent(short propVal)
{
	SetProperty(0x14, VT_I2, propVal);
}

BOOL CDSSPanel::GetFloodShowPct()
{
	BOOL result;
	GetProperty(0x15, VT_BOOL, (void*)&result);
	return result;
}

void CDSSPanel::SetFloodShowPct(BOOL propVal)
{
	SetProperty(0x15, VT_BOOL, propVal);
}

long CDSSPanel::GetAlignment()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetAlignment(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

long CDSSPanel::GetAutoSize()
{
	long result;
	GetProperty(0xfffffe0c, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetAutoSize(long propVal)
{
	SetProperty(0xfffffe0c, VT_I4, propVal);
}

long CDSSPanel::GetPictureAlignment()
{
	long result;
	GetProperty(0x28, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetPictureAlignment(long propVal)
{
	SetProperty(0x28, VT_I4, propVal);
}

long CDSSPanel::GetFloodFillStyle()
{
	long result;
	GetProperty(0x3b, VT_I4, (void*)&result);
	return result;
}

void CDSSPanel::SetFloodFillStyle(long propVal)
{
	SetProperty(0x3b, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CDSSPanel operations

void CDSSPanel::Refresh()
{
	InvokeHelper(DISPID_REFRESH, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CDSSPanel::PlaySoundFile(const VARIANT& SoundFile)
{
	static BYTE parms[] =
		VTS_VARIANT;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &SoundFile);
}

void CDSSPanel::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
